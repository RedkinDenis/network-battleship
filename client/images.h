#ifndef IMAGES_H
#define IMAGES_H

#include <QMap>
#include <QImage>
#include <QString>
#include <QDebug>
#include "./config.h"

/**
 * @brief Класс для управления изображениями игры
 * 
 * Класс Images предоставляет функциональность для загрузки и хранения
 * изображений, используемых в игре. Изображения загружаются из директории,
 * указанной в IMAGES_DIRECTORY_PATH, и хранятся в памяти для быстрого доступа.
 */
class Images
{
public:
    /**
     * @brief Конструктор
     * Инициализирует объект с флагом isLoaded_ = false
     */
    Images();
    
    /**
     * @brief Деструктор
     * Освобождает ресурсы
     */
    ~Images();

    /**
     * @brief Загружает все изображения из директории
     * 
     * Загружает изображения из директории, указанной в IMAGES_DIRECTORY_PATH,
     * и сохраняет их в map images_ с ключами, соответствующими именам файлов.
     */
    void load();
    
    /**
     * @brief Получить изображение по имени
     * @param imgName Имя изображения (имя файла без расширения)
     * @return Ссылка на изображение
     * 
     * Возвращает ссылку на изображение из map images_ по его имени.
     * Если изображение не найдено, возвращает пустое изображение.
     */
    QImage& get(const QString& imgName);
    
    /**
     * @brief Проверить, загружены ли изображения
     * @return true, если изображения загружены, иначе false
     */
    bool isLoaded();

private:
    QMap<QString, QImage> images_; // Карта для хранения изображений (имя -> изображение)
    bool isLoaded_;                // Флаг, указывающий, загружены ли изображения
};

/**
 * @brief Глобальный объект для доступа к изображениям
 * 
 * Этот объект используется во всем приложении для доступа к изображениям.
 * Он инициализируется при запуске приложения и используется для отрисовки
 * игрового поля и других элементов интерфейса.
 */
extern Images pictures;

#endif // IMAGES_H
